sysdm.cpl

mariadb 주소 새로만들기 이후

cmd에서 mysql -u -p 입력 하고 
비번 입력 

하고 나면 데이터베이스 설치 완료


show databases;

이후 exit exit 라고 하면 완료

cd / 최상위

cd.. 상위

cd 체인지 디렉터리

dir 디렉터리

SELECET @@autocommit;

autocommit 1 ?
그러면

set @@autucommit=0; 해주면 됨

select * from employees;
select * from titles;


SELECT *
FROM employees
WHERE emp_no <= 10003
 OR 	emp_no >= 10005
;

SELECT emp_no FROM 
salaries WHERE 
salary <= 60000;


SELECT emp_no 
FROM salaries
WHERE salary >= 60000
	AND salary <= 70000;


    SELECT *
FROM employees
WHERE emp_no >=10003
 AND emp_no <=10005
 ;


 SELECT *
FROM employees
WHERE emp_no BETWEEN 10003 AND 10005;


emp_no 컬럼명 = 속성명

비트윈이 쿼리 실행 속도가 느림

그래서 비트윈 잘 안 씀


SELECT *
FROM employees
WHERE emp_no = 10001 
 or emp_no = 10005;
 
 -- 사원번호가 10001, 10005인 사원의 
 모든 정보를 조회해 주세요.--


 SELECT * FROM employees 
 WHERE emp_no IN(10001, 10005)
 인은 속도 저하가 크게 일어나지 않지만
 이용자가 많으면 속도 저하 발생할 수도 있음


SELECT *
FROM employees
WHERE first_name 
LIKE('___M')
;

 m___

 m%

 라이크는 무조건 써야하는데
 속도가 느려서 효율 좋게 
 만들어야 한다.

 ex) 50만건만 검색을 한다.
 보통은 범위 지정해서 사용.


 SELECT emp_no, title 
FROM titles
WHERE title
LIKE('%engineer%')
;


SELECT DISTINCT * 또는 emp_no
FROM dept_emp;

SELECT *
FROM employees
LIMIT 10 OFFSET 4;

리밋 숫자가 많으면 잘 안 쓴다
기하급수적으로 느려지기 시작함

처리하는 방법이 따로 있음


SELECT *
FROM employees;
ORDER BY emp_no ; 

asc

desc;

first_name 이름
last_name 성

SELECT *
FROM employees
ORDER BY first_name ASC;

SELECT *
FROM employees
ORDER BY first_name ASC, last_name ASC;


SELECT COUNT(emp_no)
FROM employees
;

SELECT AVG(salary)
FROM salaries;

SELECT MAX(salary)
FROM salaries;

SELECT MIN(salary)
FROM salaries;

SELECT title, COUNT(title)
FROM titles
GROUP BY title 

SELECT title, COUNT(title)
FROM titles
GROUP BY title HAVING COUNT(title) >= 100000;

SELECT emp_no, AVG(salary)
FROM salaries
GROUP BY emp_no;



SELECT emp_no, AVG(salary)
FROM salaries
GROUP BY emp_no HAVING AVG(salary) >= 30000 AND AVG(salary) <=50000;


SELECT title ,COUNT(title)
FROM titles 
GROUP BY title HAVING COUNT(title) >=10000;

SELECT CONCAT(last_name, ' ', first_name) AS fullname
from employees;

SELECT *
FROM dept_manager
WHERE dept_no in 
                 (
             			SELECT dept_no 
							FROM dept_manager
             			WHERE emp_no = '110344'
				     ) ;
				     
				     
SELECT *
FROM dept_manager
WHERE emp_no in 
                 (
             			SELECT emp_no 
							FROM dept_manager
             			WHERE dept_no = 'd009'
				     ) ;
				     
				     
				     
SELECT *
FROM dept_manager
WHERE emp_no = ANY(
             			SELECT emp_no 
							FROM dept_manager
             			WHERE dept_no = 'd009'
				     ) ;  
				     
				     
SELECT *
FROM dept_manager
WHERE emp_no = ALL (
             			SELECT emp_no 
							FROM dept_manager
             			WHERE dept_no = 'd009'
				     ) ;  

SELECT emp_no, first_name, last_name, gender  
FROM employees 
WHERE emp_no 
            	IN (
						SELECT emp_no
						FROM salaries
						GROUP BY emp_no HAVING AVG(salary) >= 70000
						);


                SELECT *
FROM dept_emp
WHERE emp_no = 10010
  AND to_date >= NOW();

  데이트 타입의 속성 비교 방법 

  문자만 홑따옴표
  숫자는 홑따옴표 x


  SELECT *
FROM dept_emp
WHERE emp_no = 10010
  AND to_date >= NOW();
  
  
SELECT *, NOW()
FROM titles
WHERE emp_no = 10009
AND to_date >= NOW();   

SELECT emp_no, last_name
FROM employees
WHERE emp_no IN (
					SELECT emp_no
					FROM titles
					WHERE to_date >= NOW()
					AND title = 'senior engineer'
					);
현재 직책이 시니어 엔지니어인
사원의 사원번호와 성을 조회해주세요.




INSERT INTO employees(
 emp_no
,birth_date
,first_name
,last_name
,hire_date					
)
VALUES
(
	50000
	,NOW()
	,'SeongYeob'
	,'YOO'
	,'M'
	,NOW()
	);
	
	
	(
	 emp_no
,birth_date
,first_name
,last_name
,hire_date	
)

INSERT INTO employees(
 emp_no
,birth_date
,first_name
,last_name
,gender
,hire_date					
)
VALUES
(
	50001
	,NOW()
	,'SeongYeob'
	,'YOO'
	,'M'
	,NOW()
	);
	
	
	SELECT *
	FROM employees
	WHERE emp_no = 500000;


    SELECT @@autocommit;

2023-03-15 update

update departments
set dept_name= '1000'
where dept_no= 'd001' or dept_no = 'd002';


and는 둘 다 조건이 만족해야 함


	update employees 
	set first_name = '신'
	, last_name  = '유진'
	, birth_date = date(19940424)
	where emp_no = 500000;


	select *
	from departments 
	order by dept_no;


밑에 께 완성본

	INSERT INTO employees(
 emp_no
,birth_date
,first_name
,last_name
,hire_date
)
VALUES
(
	500000
	,NOW()
	,'SeongYeob'
	,'YOO'
	,NOW()
	);
	
	SELECT *
	FROM employees
	WHERE emp_no = 500000;
	
	update employees 
	set first_name = '유'
	, last_name  = '성엽'
	, birth_date = date(19940424)
	where emp_no = 500000;

이게 완성본

데이터 삭제는 
DELETE FROM employees
WHERE emp_no = 500000;

이것이다.

셀렉트 업데이트 딜리트 인서트를 2023.03.15까지 배웠다.

2023.03.15 단체 과제
1사원정보 테이블에 각자의 정보를 적절하게 기입해주세요.
2월급, 직책, 소속부서를 테이블에 각자의 정보를 적절하게 기입해주세요.
3짝궁 [1,2] 것도 기입해주세요.
4나의 짝궁의 소속 부서를 d009로 변경해주세요.
5짝궁의 모든 정보를 삭제해주세요
6'd009'부서의 관리자를 나로 변경해주세요
7오늘 날짜부로 나의 직책을 'senior engineer'로 변경해주세요.
8최고 연봉 사원과 최저 연봉 사원의 사번과 이름을 출력해주세요
9전체 사원의 평균 연봉을 출력해주세요.
10. 사번이 499,975인 사원의 지금까지의 평균 연봉을 출력해주세요.

INSERT INTO employees (
	emp_no
	,birth_date
	,first_name
	,last_name
	,gender
	,hire_date
	)
	
	VALUE (
	1020304050
	,NOW()
	,'SeongYeob'
	,'Yoo'
	,'m'
	,NOW()
	);
	
	
	SELECT *
	FROM employees
	WHERE emp_no = 1020304050;

UPDATE employees
SET first_name = '성엽'
  	 ,last_name = '유'
  	 ,birth_date = DATE(19940424)
  	 ,gender= 'm'
WHERE emp_no = 1020304050 ;


INSERT INTO salaries (
	emp_no
	,salary
	,from_date
	,to_date			
)

VALUE (
	1020304050
	,77555
	,NOW()
	,NOW()
);


INSERT INTO titles (
	emp_no
	,title
	,from_date
	,to_date			
)

VALUE (
	1020304050
	,'engineer'
	,DATE(20230301)
	,NOW()
);

INSERT INTO dept_emp (
	emp_no
	,dept_no
	,from_date
	,to_date			
)

VALUE (
	1020304050
	,'d002'
	,DATE(20230301)
	,NOW()
);


INSERT INTO employees (
	emp_no
	,birth_date
	,first_name
	,last_name
	,gender
	,hire_date
	)
	
	VALUE (
	500000
	,DATE(19970518)
	,'창현'
	,'배'
	,'m'
	,NOW()
	);
	
	
	SELECT *
	FROM employees
	WHERE emp_no = 500000;
	
	

	
	INSERT INTO dept_emp (
	emp_no
	,dept_no
	,from_date
	,to_date			
)

VALUE (
	500000
	,'d001'
	,DATE(19970518)
	,NOW()
);


INSERT INTO titles (
	emp_no
	,title
	,from_date
	,to_date			
)

VALUE (
	500000
	,'engineer'
	,DATE(19970518)
	,NOW()
);


INSERT INTO salaries (
	emp_no
	,salary
	,from_date
	,to_date			
)

VALUE (
	500000
	,77777777
	,DATE(19970518)
	,NOW()
);


UPDATE dept_emp
SET dept_no = 'd009'
WHERE emp_no = 1020304050 OR emp_no= 500000;


DELETE 
FROM employees 
WHERE emp_no = 500000;


UPDATE departments
SET dept_name= '유성엽'
WHERE dept_no ='d009';


UPDATE titles 
SET title = 'senior engineer', FROM_date = NOW()
WHERE emp_no = 1020304050
;



SELECT emp_no, first_name CONCAT(MAX, MIN)
FROM employees
WHERE emp_no  IN (
             			SELECT emp_no 
							FROM salaries
             			WHERE salary
             			GROUP BY salary
             			HAVING salary
						
						 );
						 
				
				
				
				
				
				
SELECT emp_no, first_name 
FROM employees 
WHERE emp_no 
            	= (
						SELECT emp_no
						FROM salaries
						order BY MAX='salary' AND MIN='salary' 
						);							
				


				

SELECT *
FROM employees
WHERE emp_no = (
					SELECT emp_no
					FROM salaries
					WHERE salary					
					ORDER BY salary desc LIMIT 1
					);
					
				
SELECT *
FROM employees
WHERE emp_no = (
					SELECT emp_no
					FROM salaries
					WHERE salary					
					ORDER BY salary asc LIMIT 1
					);



SELECT AVG(salary)
FROM salaries;

						 
						 
SELECT emp_no
,AVG (salary)
FROM salaries
WHERE emp_no = 499975;


SELECT emp_no, first_name, last_name
FROM employees
WHERE emp_no IN (
						SELECT emp_no
						FROM salaries 
						WHERE salary = (SELECT MAX(salary)FROM salaries)
							or salary = (SELECT MIN(salary)FROM salaries)
						
						
					);



				또는	WHERE salary IN (
					(SELECT MAX(salary) FROM salaries),
					(SELECT MIN(salary) FROM salaries)
					)


			오더 바이 쿼리 형식


SELECT emp_no, first_name 
FROM employees
WHERE emp_no =
(SELECT emp_no FROM salaries ORDER BY salary LIMIT 1)
OR 
emp_no =
(SELECT emp_no FROM salaries ORDER BY salary DESC LIMIT 1) ;